---
import { intersection } from 'astro:schema';
import Layout from '../../layouts/Layout.astro';

interface IImage {
    id: number;
    cardId: string;
    url: string;
    type: string;
}

interface IMarket {
    id: number;
    cardId: string;
    url: string;
    updatedAt: string;
    market: string;
}


interface CardDetail {
    id: string;
    name: string;
    number: string;
    rarity: string;
    supertype: string;
    types: string[];
    subtypes: string[];
    setId: string;
    Market: IMarket[];
    Image: IImage[];
}

// Obtener el cardId de los parámetros de la URL
const { card } = Astro.params;
const backendUrl = process.env.BACKEND_URL || "http://localhost:3000";
const response = await fetch(`${backendUrl}/cards/${card}`);

const cardDetail: CardDetail = await response.json();
// Definir un título para la página
const pageTitle = cardDetail ? `${cardDetail.name} | Detalles de la Carta` : "Detalles de la Carta";
---

<Layout title={pageTitle}>
    <main class="container mx-auto px-4 py-8">
        <a 
            href="javascript:history.back()" 
            class="inline-block mb-6 bg-black text-white px-4 py-2 rounded-md hover:bg-gray-800 transition-colors"
        >
            &larr; Volver
        </a>


        <!-- Mostrar los detalles de la carta si se obtuvo la información -->
        {cardDetail ? (
                <div id="cardDetailContent">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <div class="bg-pink-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                            <h2 class="text-3xl font-black mb-4 border-b-4 border-black pb-2">
                                {cardDetail.name}
                            </h2>
                            <div class="space-y-4">
                                <div class="flex justify-between items-center">
                                    <span class="font-bold text-lg">
                                        Número:
                                    </span>
                                    <span class="bg-yellow-300 px-3 py-1 rounded-md border-2 border-black font-bold">
                                        {cardDetail.number}
                                    </span>
                                </div>

                                <div class="flex justify-between items-center">
                                    <span class="font-bold text-lg">
                                        Rareza:
                                    </span>
                                    <span class="bg-purple-300 px-3 py-1 rounded-md border-2 border-black font-bold">
                                        {cardDetail.rarity}
                                    </span>
                                </div>

                                <div class="flex justify-between items-center">
                                    <span class="font-bold text-lg">
                                        Supertipo:
                                    </span>
                                    <span class="bg-blue-200 px-3 py-1 rounded-md border-2 border-black">
                                        {cardDetail.supertype}
                                    </span>
                                </div>

                                <div>
                                    <span class="font-bold text-lg">
                                        Tipos:
                                    </span>
                                    <div class="mt-2 flex flex-wrap gap-2">
                                        {cardDetail.types &&
                                        cardDetail.types.length > 0 ? (
                                            cardDetail.types.map((type) => (
                                                <span class="bg-green-200 px-2 py-1 rounded-md border-2 border-black text-sm">
                                                    {type}
                                                </span>
                                            ))
                                        ) : (
                                            <span class="text-gray-500">
                                                No hay tipos disponibles
                                            </span>
                                        )}
                                    </div>
                                </div>

                                <div>
                                    <span class="font-bold text-lg">
                                        Subtipos:
                                    </span>
                                    <div class="mt-2 flex flex-wrap gap-2">
                                        {cardDetail.subtypes &&
                                        cardDetail.subtypes.length > 0 ? (
                                            cardDetail.subtypes.map(
                                                (subtype) => (
                                                    <span class="bg-orange-200 px-2 py-1 rounded-md border-2 border-black text-sm">
                                                        {subtype}
                                                    </span>
                                                ),
                                            )
                                        ) : (
                                            <span class="text-gray-500">
                                                No hay subtipos disponibles
                                            </span>
                                        )}
                                    </div>
                                </div>

                                <div class="pt-4 border-t-4 border-black">
                                    <span class="font-bold text-lg">
                                        ID Completo:
                                    </span>
                                    <div
                                        id="cardDetailId"
                                        class="mt-2 bg-cyan-200 p-2 border-2 border-black rounded-md font-mono"
                                    >
                                        {cardDetail.id}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="bg-green-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] mb-6">
                                <h3 class="text-2xl font-black mb-4 border-b-4 border-black pb-2">
                                    Mercado
                                </h3>
                                <div class="space-y-3">
                                    {cardDetail.Market &&
                                    cardDetail.Market.length > 0 ? (
                                        cardDetail.Market.map((market) => (
                                            <div class="bg-white border-2 border-black rounded-md p-3 shadow-[3px_3px_0px_0px_rgba(0,0,0,1)]">
                                                <div class="font-bold text-lg mb-2">
                                                    {market.market
                                                        .charAt(0)
                                                        .toUpperCase() +
                                                        market.market.slice(
                                                            1,
                                                        )}
                                                </div>
                                                <div class="text-sm mb-1">
                                                    <span class="font-bold">
                                                        Actualizado:
                                                    </span>{" "}
                                                    {market.updatedAt}
                                                </div>
                                                <a
                                                    href={market.url}
                                                    target="_blank"
                                                    class="inline-block mt-2 bg-yellow-300 hover:bg-yellow-400 text-black px-3 py-1 rounded-md border-2 border-black font-bold transition-all"
                                                >
                                                    Ver precios
                                                </a>
                                            </div>
                                        ))
                                    ) : (
                                        <p class="text-gray-500">
                                            No hay información de mercado
                                            disponible
                                        </p>
                                    )}
                                </div>
                            </div>

                            <div class="bg-orange-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                                <h3 class="text-2xl font-black mb-4 border-b-4 border-black pb-2">
                                    Set
                                </h3>
                                <p>
                                    <span class="font-bold">Set ID:</span>{" "}
                                    {cardDetail.setId}
                                </p>
                                <a 
                                    href={`/${cardDetail.setId}`}
                                    class="inline-block mt-4 bg-yellow-300 hover:bg-yellow-400 text-black px-3 py-1 rounded-md border-2 border-black font-bold transition-all"
                                >
                                    Ver set completo
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Sección para mostrar la última imagen de la carta -->
                    <div class="mt-8 bg-blue-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                        <h3 class="text-2xl font-black mb-4 border-b-4 border-black pb-2">
                            Imagen
                        </h3>
                        
                        <div class="grid place-items-center">
                            {cardDetail.Image && cardDetail.Image.length > 0 ? (
                                <div class="bg-white border-2 border-black rounded-md p-3 shadow-[3px_3px_0px_0px_rgba(0,0,0,1)] max-w-md">
                                    {(() => {
                                        const lastImage = cardDetail.Image[cardDetail.Image.length - 1];
                                        return (
                                            <>
                                                <div class="font-bold text-sm mb-2">
                                                    {lastImage.type.charAt(0).toUpperCase() + lastImage.type.slice(1)}
                                                </div>
                                                <img 
                                                    src={lastImage.url} 
                                                    alt={`${cardDetail.name} - ${lastImage.type}`}
                                                    class="w-full h-auto rounded-md border-2 border-black"
                                                />
                                                <a
                                                    href={lastImage.url}
                                                    target="_blank"
                                                    class="inline-block mt-2 bg-yellow-300 hover:bg-yellow-400 text-black px-3 py-1 rounded-md border-2 border-black font-bold transition-all"
                                                >
                                                    Ver imagen completa
                                                </a>
                                            </>
                                        );
                                    })()}
                                </div>
                            ) : (
                                <p class="text-gray-500">
                                    No hay imágenes disponibles para esta carta
                                </p>
                            )}
                        </div>
                    </div>
                </div>
            ) : (
                // Si no hay cardDetail (y tampoco error) se muestra un loader
                <div id="cardLoading" class="py-12 text-center">
                    <div class="inline-block px-6 py-4 bg-yellow-300 border-4 border-black rounded-lg shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                        <svg
                            class="animate-spin h-8 w-8 text-black inline-block mr-2"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                        >
                            <circle
                                class="opacity-25"
                                cx="12"
                                cy="12"
                                r="10"
                                stroke="currentColor"
                                stroke-width="4"
                            />
                            <path
                                class="opacity-75"
                                fill="currentColor"
                                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                            />
                        </svg>
                        <span class="font-bold text-xl">
                            Cargando detalles...
                        </span>
                    </div>
                </div>
            )
        }
    </main>
</Layout> 