---
interface IMarket {
    id: number;
    cardId: string;
    url: string;
    updatedAt: string;
    market: string;
}

interface CardDetail {
    id: string;
    name: string;
    number: string;
    rarity: string;
    supertype: string;
    types: string[];
    subtypes: string[];
    setId: string;
    Market: IMarket[];
}

const backendUrl = process.env.BACKEND_URL || "http://localhost:3000";


// Se espera que el componente reciba el cardId como prop
const { cardId, show } = Astro.props;
let cardDetail: CardDetail | null = null;
let errorMessage = "";


const response = await fetch(`${backendUrl}/cards/${cardId}`);
cardDetail = await response.json();

---

<div
    id="cardModal"
    class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 sm:p-8"
>
    <div
        class="relative w-full max-w-4xl bg-white border-6 border-black rounded-lg shadow-[16px_16px_0px_0px_rgba(0,0,0,1)] overflow-hidden"
    >
        <button
            id="closeModal"
            class="absolute top-4 right-4 bg-red-500 hover:bg-red-600 text-white font-bold w-10 h-10 rounded-full border-4 border-black flex items-center justify-center shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] transition-all hover:shadow-[6px_6px_0px_0px_rgba(0,0,0,1)]"
        >
            <span class="text-2xl leading-none">&times;</span>
        </button>

        <div class="p-6">
            <!-- Mostrar error si ocurre -->
            {
                errorMessage && (
                    <div id="cardError">
                        <div class="bg-red-200 border-4 border-black rounded-lg p-6 text-center">
                            <svg
                                class="w-12 h-12 mx-auto mb-4 text-red-600"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                                />
                            </svg>
                            <h3 class="text-xl font-black mb-2">
                                Error al cargar los detalles
                            </h3>
                            <p class="text-red-700">{errorMessage}</p>
                        </div>
                    </div>
                )
            }

            <!-- Mostrar los detalles de la carta si se obtuvo la información -->
            {
                cardDetail && !errorMessage ? (
                    <div id="cardDetailContent">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                            <div class="bg-pink-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                                <h2 class="text-3xl font-black mb-4 border-b-4 border-black pb-2">
                                    {cardDetail.name}
                                </h2>
                                <div class="space-y-4">
                                    <div class="flex justify-between items-center">
                                        <span class="font-bold text-lg">
                                            Número:
                                        </span>
                                        <span class="bg-yellow-300 px-3 py-1 rounded-md border-2 border-black font-bold">
                                            {cardDetail.number}
                                        </span>
                                    </div>

                                    <div class="flex justify-between items-center">
                                        <span class="font-bold text-lg">
                                            Rareza:
                                        </span>
                                        <span class="bg-purple-300 px-3 py-1 rounded-md border-2 border-black font-bold">
                                            {cardDetail.rarity}
                                        </span>
                                    </div>

                                    <div class="flex justify-between items-center">
                                        <span class="font-bold text-lg">
                                            Supertipo:
                                        </span>
                                        <span class="bg-blue-200 px-3 py-1 rounded-md border-2 border-black">
                                            {cardDetail.supertype}
                                        </span>
                                    </div>

                                    <div>
                                        <span class="font-bold text-lg">
                                            Tipos:
                                        </span>
                                        <div class="mt-2 flex flex-wrap gap-2">
                                            {cardDetail.types &&
                                            cardDetail.types.length > 0 ? (
                                                cardDetail.types.map((type) => (
                                                    <span class="bg-green-200 px-2 py-1 rounded-md border-2 border-black text-sm">
                                                        {type}
                                                    </span>
                                                ))
                                            ) : (
                                                <span class="text-gray-500">
                                                    No hay tipos disponibles
                                                </span>
                                            )}
                                        </div>
                                    </div>

                                    <div>
                                        <span class="font-bold text-lg">
                                            Subtipos:
                                        </span>
                                        <div class="mt-2 flex flex-wrap gap-2">
                                            {cardDetail.subtypes &&
                                            cardDetail.subtypes.length > 0 ? (
                                                cardDetail.subtypes.map(
                                                    (subtype) => (
                                                        <span class="bg-orange-200 px-2 py-1 rounded-md border-2 border-black text-sm">
                                                            {subtype}
                                                        </span>
                                                    ),
                                                )
                                            ) : (
                                                <span class="text-gray-500">
                                                    No hay subtipos disponibles
                                                </span>
                                            )}
                                        </div>
                                    </div>

                                    <div class="pt-4 border-t-4 border-black">
                                        <span class="font-bold text-lg">
                                            ID Completo:
                                        </span>
                                        <div
                                            id="cardDetailId"
                                            class="mt-2 bg-cyan-200 p-2 border-2 border-black rounded-md font-mono"
                                        >
                                            {cardDetail.id}
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <div class="bg-green-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] mb-6">
                                    <h3 class="text-2xl font-black mb-4 border-b-4 border-black pb-2">
                                        Mercado
                                    </h3>
                                    <div class="space-y-3">
                                        {cardDetail.Market &&
                                        cardDetail.Market.length > 0 ? (
                                            cardDetail.Market.map((market) => (
                                                <div class="bg-white border-2 border-black rounded-md p-3 shadow-[3px_3px_0px_0px_rgba(0,0,0,1)]">
                                                    <div class="font-bold text-lg mb-2">
                                                        {market.market
                                                            .charAt(0)
                                                            .toUpperCase() +
                                                            market.market.slice(
                                                                1,
                                                            )}
                                                    </div>
                                                    <div class="text-sm mb-1">
                                                        <span class="font-bold">
                                                            Actualizado:
                                                        </span>{" "}
                                                        {market.updatedAt}
                                                    </div>
                                                    <a
                                                        href={market.url}
                                                        target="_blank"
                                                        class="inline-block mt-2 bg-yellow-300 hover:bg-yellow-400 text-black px-3 py-1 rounded-md border-2 border-black font-bold transition-all"
                                                    >
                                                        Ver precios
                                                    </a>
                                                </div>
                                            ))
                                        ) : (
                                            <p class="text-gray-500">
                                                No hay información de mercado
                                                disponible
                                            </p>
                                        )}
                                    </div>
                                </div>

                                <div class="bg-orange-200 border-4 border-black rounded-lg p-5 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                                    <h3 class="text-2xl font-black mb-4 border-b-4 border-black pb-2">
                                        Set
                                    </h3>
                                    <p>
                                        <span class="font-bold">Set ID:</span>{" "}
                                        {cardDetail.setId}
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                ) : (
                    // Si no hay cardDetail (y tampoco error) se muestra un loader
                    <div id="cardLoading" class="py-12 text-center">
                        <div class="inline-block px-6 py-4 bg-yellow-300 border-4 border-black rounded-lg shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
                            <svg
                                class="animate-spin h-8 w-8 text-black inline-block mr-2"
                                xmlns="http://www.w3.org/2000/svg"
                                fill="none"
                                viewBox="0 0 24 24"
                            >
                                <circle
                                    class="opacity-25"
                                    cx="12"
                                    cy="12"
                                    r="10"
                                    stroke="currentColor"
                                    stroke-width="4"
                                />
                                <path
                                    class="opacity-75"
                                    fill="currentColor"
                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                />
                            </svg>
                            <span class="font-bold text-xl">
                                Cargando detalles...
                            </span>
                        </div>
                    </div>
                )
            }
        </div>
    </div>
</div>

<script>
    // Solo se encarga de manejar la UI (cerrar el modal)
    document.addEventListener("DOMContentLoaded", () => {
        const modal = document.getElementById("cardModal");
        const closeModal = document.getElementById("closeModal");

        if (closeModal) {
            closeModal.addEventListener("click", () => {
                if (modal) {
                    modal.classList.add("hidden");
                }
            });
        }

        if (modal) {
            modal.addEventListener("click", (e) => {
                if (e.target === modal) {
                    modal.classList.add("hidden");
                }
            });

            document.addEventListener("keydown", (e) => {
                if (e.key === "Escape") {
                    modal.classList.add("hidden");
                }
            });
        }
    });
</script>
