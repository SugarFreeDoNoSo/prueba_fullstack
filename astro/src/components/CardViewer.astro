---
// card-viewer.astro
export interface Props {
  cards: {
    id: string;
    name: string;
    supertype: string;
    subtypes: string[];
    types: string[];
    setId: string;
    number: string;
    rarity: string;
  }[];
  // Se puede recibir el índice actual vía props o por defecto es 0
  currentIndex?: number;
}



const { cards, currentIndex = 0 } = Astro.props;
const viewerId = cards.length > 0 ? `card-viewer-${cards[0].setId}` : 'card-viewer';
const offset = -100 * currentIndex;
---
<div id={viewerId} class="card-viewer relative mb-6">
  <div class="flex items-center justify-between mb-4">
    <!-- Botón anterior: usa htmx para solicitar la vista con el índice previo -->
    <button
      hx-get={`/card-viewer?direction=prev&currentIndex=${currentIndex}`}
      hx-target={`#${viewerId}`}
      hx-swap="outerHTML"
      class="prev-card p-2 bg-gray-200 rounded-full hover:bg-gray-300 transition-colors duration-200"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
    </button>

    <!-- Contenedor de cartas: se actualiza con el desplazamiento calculado -->
    <div class="flex-1 overflow-hidden">
      <div class="cards-container flex transition-transform duration-700 ease-in-out" style={`transform: translateX(${offset}%);`}>
         {cards.map(card => (
             <div class="card-slide w-full flex-shrink-0 px-4">
               <div class="flex flex-col md:flex-row gap-4">
                 <div class="w-full md:w-1/2">
                   <img
                     src={`https://images.pokemontcg.io/${card.setId}/${card.number}.png`}
                     alt={card.name}
                     class="w-full rounded-lg shadow-lg"
                   />
                 </div>
                 <div class="w-full md:w-1/2 space-y-4">
                   <h3 class="text-xl font-bold">{card.name}</h3>
                   <div class="space-y-2">
                     <p><span class="font-semibold">Number:</span> {card.number}</p>
                     <p><span class="font-semibold">Supertype:</span> {card.supertype}</p>
                     <p><span class="font-semibold">Subtypes:</span> {card.subtypes.join(', ')}</p>
                     <p><span class="font-semibold">Rarity:</span> {card.rarity || 'N/A'}</p>
                   </div>
                 </div>
               </div>
             </div>
         ))}
      </div>
    </div>

    <!-- Botón siguiente: usa htmx para solicitar la vista con el índice siguiente -->
    <button
      hx-get={`/card-viewer?direction=next&currentIndex=${currentIndex}`}
      hx-target={`#${viewerId}`}
      hx-swap="outerHTML"
      class="next-card p-2 bg-gray-200 rounded-full hover:bg-gray-300 transition-colors duration-200"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </button>
  </div>

  <!-- Indicadores de navegación: cada uno solicita la vista correspondiente al índice de la carta -->
  <div class="card-indicators flex justify-center gap-2 mt-4">
    {cards.map((_, index) => (
      <button
        hx-get={`/card-viewer?index=${index}`}
        hx-target={`#${viewerId}`}
        hx-swap="outerHTML"
        class={`w-2 h-2 rounded-full hover:bg-gray-400 transition-colors duration-200 card-indicator ${index === currentIndex ? 'bg-blue-500' : 'bg-gray-300'}`}
        data-index={index}
      ></button>
    ))}
  </div>
</div>
